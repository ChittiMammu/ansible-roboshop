- name: creating catalogue
  hosts: catalogue
  become: yes
  tasks:

    - name: disable old nodeJS and enable new nodejs
      ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y

    - name: installing nodejs
      ansible.builtin.dnf:
        name: nodejs
        state: present

    - name: adding user
      ansible.builtin.user:
        name: roboshop

    - name: creating app directory
      ansible.builtin.file:
        path: /app

    - name: downloading the source code
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
        dest: /tmp

    - name: unzipping code
      ansible.builtin.unarchive:
        src: /tmp/catalogue.zip
        dest: /app

    - name: Install dependencies
      ansible.builtin.command: npm install
      args:
        chdir: /app 

    - name: copy catalogue.service
      ansible.builtin.copy:
        src: catalogue.service
        dest: /etc/systemd/system/catalogue.service

    - name: daemon-reload
      ansible.builtin.systemd_service:
        daemon_reload: true

    - name: copy mongo.repo
      ansible.builtin.copy:
        src: mongo.repo
        dest: /etc/yum.repos.d/mongo.repo

    - name: Install MongoDB client 
      ansible.builtin.dnf:
        name: mongodb-org-shell
        state: present

    - name: get the catageories count 
      ansible.builtin.command: mongo --host mongodb.malluru.online --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'
      register: product_count

    # - name: print the count 
  #   ansible.builtin.debug:
  #     msg: "product count : {{product_count}}"

    - name: load cataloge data 
      ansible.builtin.command: mongo --host mongodb.malluru.online < /app/schema/catalogue.js
      when: product_count.stdout == "0"
      ignore_errors: true

    - name: start and enable catalogue 
      ansible.builtin.service:
        name: catalogue
        enabled: yes
        state: started

    



